/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as SLayoutImport } from './routes/s/_layout'
import { Route as SLayoutSplatImport } from './routes/s/_layout/$'

// Create Virtual Routes

const SImport = createFileRoute('/s')()

// Create/Update Routes

const SRoute = SImport.update({
  path: '/s',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const SLayoutRoute = SLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => SRoute,
} as any)

const SLayoutSplatRoute = SLayoutSplatImport.update({
  path: '/$',
  getParentRoute: () => SLayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/s': {
      id: '/s'
      path: '/s'
      fullPath: '/s'
      preLoaderRoute: typeof SImport
      parentRoute: typeof rootRoute
    }
    '/s/_layout': {
      id: '/s/_layout'
      path: '/s'
      fullPath: '/s'
      preLoaderRoute: typeof SLayoutImport
      parentRoute: typeof SRoute
    }
    '/s/_layout/$': {
      id: '/s/_layout/$'
      path: '/$'
      fullPath: '/s/$'
      preLoaderRoute: typeof SLayoutSplatImport
      parentRoute: typeof SLayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  SRoute: SRoute.addChildren({
    SLayoutRoute: SLayoutRoute.addChildren({ SLayoutSplatRoute }),
  }),
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/s"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/s": {
      "filePath": "s",
      "children": [
        "/s/_layout"
      ]
    },
    "/s/_layout": {
      "filePath": "s/_layout.tsx",
      "parent": "/s",
      "children": [
        "/s/_layout/$"
      ]
    },
    "/s/_layout/$": {
      "filePath": "s/_layout/$.tsx",
      "parent": "/s/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
